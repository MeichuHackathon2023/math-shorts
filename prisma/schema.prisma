datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model User {
    id        Int        @id @default(autoincrement())
    email     String     @unique
    name      String
    password  String
    grade     Grade
    videos    Video[]
    playlists Playlist[]
}

model Video {
    id                Int                         @id @default(autoincrement())
    name              String
    description       String
    kkVodId           String                      @unique
    user              User                        @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId            Int
    processed         Boolean                     @default(false)
    duration          Float                       @default(0)
    embedLink         String                      @default("") @db.VarChar(2000)
    tags              Tag[]
    playlists         Playlist[]
    FlashcardProgress FlashcardProgressOnVideos[]

    @@fulltext([name])
    @@fulltext([description])
}

model Playlist {
    id          Int     @id @default(autoincrement())
    name        String
    description String
    users       User[]
    videos      Video[]
}

model Tag {
    id     Int     @id @default(autoincrement())
    videos Video[]
    name   String  @unique
}

model PlayProgress {
    userId            Int
    videoId           Int
    percentageElapsed Float    @default(0)
    updateTime        DateTime @default(now())

    @@id([userId, videoId])
}

model FlashcardProgress {
    userId     Int
    playlistId Int
    hidden     FlashcardProgressOnVideos[]

    @@id([userId, playlistId])
}

model FlashcardProgressOnVideos {
    video                       Video             @relation(fields: [videoId], references: [id], onDelete: Cascade)
    videoId                     Int
    flashcardProgress           FlashcardProgress @relation(fields: [flashcardProgressUserId, flashcardProgressPlaylistId], references: [userId, playlistId], onDelete: Cascade)
    flashcardProgressUserId     Int
    flashcardProgressPlaylistId Int

    @@id([videoId, flashcardProgressUserId, flashcardProgressPlaylistId])
}

enum Grade {
    FRESHMAN
    SOPHOMORE
    SENIOR_THREE
}
